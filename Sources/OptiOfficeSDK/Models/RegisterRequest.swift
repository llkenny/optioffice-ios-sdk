//
// RegisterRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "OptiOfficeSDKAPI.RegisterRequest")
public typealias RegisterRequest = OptiOfficeSDKAPI.RegisterRequest

extension OptiOfficeSDKAPI {

public struct RegisterRequest: Codable, JSONEncodable, Hashable {

    static let passwordRule = StringRule(minLength: 8, maxLength: nil, pattern: "/^(?=.*[A-Za-z])(?=.*\\\\d).+$/")
    public var email: String
    /** Must be at least 8 characters long and contain at least one letter and one digit.  */
    public var password: String
    /** Client generated identifier for the device. Refresh tokens are bound to this value. See [Device Binding](authn-authz.md#device-binding).  */
    public var deviceId: String?
    public var name: String?

    public init(email: String, password: String, deviceId: String? = nil, name: String? = nil) {
        self.email = email
        self.password = password
        self.deviceId = deviceId
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case email
        case password
        case deviceId
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(email, forKey: .email)
        try container.encode(password, forKey: .password)
        try container.encodeIfPresent(deviceId, forKey: .deviceId)
        try container.encodeIfPresent(name, forKey: .name)
    }
}

}
